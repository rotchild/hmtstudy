// Generated by CoffeeScript 1.8.0����
(function () {
    var MySQLStore, app, business, cluster, connectMultiparty, express, http, i, numCPUs,
        path, pool, publicService, routes, seniorStuff, server, serviceGroup, settings, xmlBodyParser, _i;

    express = require('express');
    routes = require('./routes/routes');
    http = require('http');
    path = require('path');
    cluster = require('cluster');
    numCPUs = 1;
    publicService = require('./api/publicService/publicService');
    PublicBusiness = require('./api/publicbusiness/business');
    advertisement = require('./api/advertisement/advertisement');
    settings = require('./settings');
    settings.excelDir = path.join(__dirname, 'web/excel'); //确定excel文件保存路径配置在settings.js文件
    pool = require('mysql').createPool(settings.mysql);
    MySQLStore = require('connect-mysql')(express);
    connectMultiparty = require('connect-multiparty');
    //xmlBodyParser = require('./lib/xmlBodyParser');
    if (cluster.isMaster) {
        console.log('master');
        //for (i = _i = 0; 0 <= numCPUs ? _i < numCPUs : _i > numCPUs; i = 0 <= numCPUs ? ++_i : --_i) {
        worker = cluster.fork();
        //}
        setTimeout(function () {
            console.log("kill");
            worker.kill()
        }, 12 * 60 * 60 * 1000);
        cluster.on('exit', (function (_this) {
            return function (worker) {
                console.log('Worker ' + worker.id + ' died :(');
                worker = cluster.fork();
                setTimeout(function () {
                    console.log("kill");
                    worker.kill()
                }, 12 * 60 * 60 * 1000)
            };
        })(this));
    } else {
        app = express();
        app.set('port',settings.serverPort);
        app.set('views', __dirname + '/views');
        app.set('view engine', 'ejs');
        //app.use(express.favicon(path.join(__dirname, 'web/public/taibao/favicon.ico')));
        //app.use(express.favicon());
        app.use(express.urlencoded());
        app.use(express.json());
        //app.use(xmlBodyParser);
        app.use(express.methodOverride());
        app.use(express.cookieParser());
        app.use(connectMultiparty());
        app.use(express.session({
            secret: settings.cookie_secret,
            store: new MySQLStore({
                pool: pool
            }),
            cookie: {
                maxAge: 60 * 1000 * 60 * 24 * 30 * 3
            }
        }));
        app.use(app.router);
        app.use(express["static"](path.join(__dirname, 'web'), {
            maxAge: 30 * 24 * 60 * 60 * 1000
        }));
        app.configure('development', function () {
            return app.use(express.errorHandler());
        });
        app.configure('production', function () {
            return app.use(express.errorHandler());
        });
        routes(app);
        publicService.init(app);
        PublicBusiness.init(app);
        advertisement.init(app);
        //serviceGroup = new ServiceGroup({
        //  interval: 20 * 60 * 1000
        //});
        //serviceGroup.start({
        //  service_ids: ['scanNotify']
        //});
        server = http.createServer(app).listen(app.get('port'), function () {
            return console.log('Express server listening on port ' + app.get('port'));
        });
    }

}).call(this);

//# sourceMappingURL=app.js.map
